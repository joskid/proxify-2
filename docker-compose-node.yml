version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}
    pgadmin_data: {}

services:
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8089:8080
    restart: always
  node-exporter:
      volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      restart: always
      image: quay.io/prometheus/node-exporter:v0.14.0
      command: ["--collectors.enabled", "conntrack,loadavg,netdev,netstat,sockstat,stat,tcpstat"]
      ports:
        - "8085:9100"
  nodetest:
      ulimits:
        nproc: 65535
        nofile:
          soft: 20000
          hard: 40000
      build:
        context: node/
      volumes:
          - ./node:/src
      ports:
        - "8090:1337"
      links:
        - postgres
        #- mocks
      depends_on:
        - postgres
  node:
      ulimits:
        nproc: 65535
        nofile:
          soft: 20000
          hard: 40000
      build:
        context: node/
      volumes:
          - ./node:/src
      ports:
        - "8086:1337"
      links:
        - postgres
        #- mocks
      depends_on:
        - postgres
  postgres:
    restart: always
    image: postgres:9.6.9
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - /srv/docker/postgresql:/var/lib/postgresql
  pgexporter:
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@postgres:5432/?sslmode=disable
    image: wrouesnel/postgres_exporter
    ports:
      - "8080:9187"
  pgadmin:
    restart: always
    image: dpage/pgadmin4
    ports:
      - "8082:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=localhost@localhost
      - PGADMIN_DEFAULT_PASSWORD=password
    links:
      - postgres
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  gatling:
      build:
        context: nft/
      volumes:
          - ./nft:/src
          - ./gradle-cache:/root/.gradle
      links:
        - node
      depends_on:
        - node
        - mocks
      environment:
        - UriTarget=http://node:1337
  prometheus:
    build: prometheus
    ports:
      - "8087:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prom-dev.yml"
      - '--storage.tsdb.path=/prometheus'
    links:
      - cadvisor:cadvisor
      #- alertmanager:alertmanager
    depends_on:
      - cadvisor
  grafana:
    image: grafana/grafana:4.6.3
    depends_on:
      - prometheus
    links:
      - prometheus
    ports:
      - 8088:3000
    volumes:
      - grafana_data:/var/lib/grafana
  dashboard:
    build: dashboard
    depends_on:
      - grafana
    environment:
      - GRAFANA_URL=http://grafana:3000
      - GRAFANA_USERNAME=admin
      - GRAFANA_PASSWORD=admin
    links:
      - grafana
    volumes:
      - ./dashboard/datasources:/datasources
      - ./dashboard/dashboards:/dashboards
  mocks:
    build: mocks
    ports:
      - "9044:8080"
      - "9162:9092"
    volumes:
        - ./mocks:/src
        - ./gradle-cache:/root/.gradle
  #cassandra:
    #build: cassandra
    #ports:
      #- "9043:9042"
      #- "9161:9160"
  #cockroach:
    #image: cockroachdb/cockroach:v2.0.3
    #ports:
      #- "26257:26257"
      #- "8085:8080"
    #command:
      #- "start"
      #- "--insecure"
      #- "--host=0.0.0.0"
  #cockroach-init:
    #build: cockroach-init
    #entrypoint: /cockroach/init.sh
    #command: article
    #depends_on:
      #- cockroach
    #restart: on-failure
